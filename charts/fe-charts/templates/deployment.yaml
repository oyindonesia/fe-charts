apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.serviceName }}
  namespace: {{ .Release.Namespace }}
  annotations: 
    {{- if .Values.deployment.annotations }}
{{ toYaml .Values.deployment.annotations | indent 4 }}
    {{- end }}
spec:
  {{- if .Values.deployment.hostAliases.enabled }}
  hostAliases:
{{ toYaml .Values.deployment.hostAliases.hosts | indent 2 }}
  {{- end }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.deployment.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.deployment.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ .Values.serviceName }}
  template:
    metadata:
      annotations: 
        {{- if .Values.deployment.annotations }}
{{ toYaml .Values.deployment.annotations | indent 8 }}
        {{- end }}
      labels: 
        app: {{ .Values.serviceName }}
        {{- if .Values.deployment.podLabels }}
{{ toYaml .Values.deployment.podLabels | indent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
      containers: 
        - name: {{ .Values.serviceName }}
          image: {{ .Values.containerRegistry }}/{{ .Values.serviceName }}:{{ .Values.imageVersion }}
          ports:
            - name: {{ .Values.deployment.containers.portName }}
              containerPort: {{ .Values.deployment.containers.containerPort }}
              protocol: TCP
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.containers.liveness.path }}
              port: {{ .Values.deployment.containers.portName }}
            initialDelaySeconds: {{ .Values.deployment.containers.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.containers.liveness.initialDelaySeconds }}
            successThreshold: {{ .Values.deployment.containers.liveness.successThreshold }}
            failureThreshold: {{ .Values.deployment.containers.liveness.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.containers.readyness.path }}
              port: {{ .Values.deployment.containers.portName }}
            initialDelaySeconds: {{ .Values.deployment.containers.readyness.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.containers.readyness.periodSeconds }}
            successThreshold: {{ .Values.deployment.containers.liveness.successThreshold }}
            failureThreshold: {{ .Values.deployment.containers.liveness.failureThreshold }}
          {{- if .Values.deployment.containers.env.enabled }}  
          envFrom:  
            {{- if .Values.deployment.containers.env.configmap.enabled }}  
          - configMapRef:
              name: {{ .Values.serviceName }}-configmap
            {{- end }}
            {{- if .Values.deployment.containers.env.secret.enabled }}  
          - secretRef:
              name: {{ .Values.serviceName }}-secret
            {{- end }}
          {{- end }}
        {{- if .Values.deployment.additionalContainers }}
{{ toYaml .Values.deployment.additionalContainers | indent 8 }}      
        {{- end }}
